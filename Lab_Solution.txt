PART 1 ->

model = Sequential()
model.add(layers.Dense(200, input_shape=(input_size,), activation='relu'))
model.add(layers.Dense(50, activation='relu'))
model.add(layers.Dense(20, activation='relu'))
model.add(layers.Dense(1, activation='sigmoid'))
model.compile(loss='mean_squared_error', optimizer='adam', metrics=['accuracy'])
model.fit(train_data, train_labels, epochs=10, batch_size=2048, validation_split=0.1)



PART 2 ->

limited_model = Sequential()
limited_model.add(layers.Dense(200, input_shape=(input_size,), activation='relu'))
limited_model.add(layers.Dense(50, activation='relu'))
limited_model.add(layers.Dense(20, activation='relu'))
limited_model.add(layers.Dense(1, activation='sigmoid'))
limited_model.compile(loss='mean_squared_error', optimizer='adam', metrics=['accuracy'])
limited_model.fit(limited_train_data, limited_train_labels, epochs=10, batch_size=2048, validation_split=0.1)



PART 3 ->

!gcloud ai-platform models create complete_model --regions $REGION

PART 4 ->

!gcloud ai-platform versions create $VERSION_NAME \
--model=complete_model \
--framework='TENSORFLOW' \
--runtime-version=2.1 \
--origin=$MODEL_BUCKET/saved_complete_model/ \
--staging-bucket=$MODEL_BUCKET \
--python-version=3.7


PART 5 ->

!gcloud ai-platform models create limited_model --regions $REGION

PART 6 ->

!gcloud ai-platform versions create $VERSION_NAME \
--model=limited_model \
--framework='TENSORFLOW' \
--runtime-version=2.1 \
--origin=gs://$MODEL_BUCKET/saved_limited_model/ \
--staging-bucket=gs://$MODEL_BUCKET \
--python-version=3.7


